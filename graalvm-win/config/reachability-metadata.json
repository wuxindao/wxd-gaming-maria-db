{
  "reflection": [
    {
      "type": "[B"
    },
    {
      "type": "[Ljava.lang.String;"
    },
    {
      "type": "[Lorg.springframework.util.ConcurrentReferenceHashMap$Segment;"
    },
    {
      "type": "[Lsun.security.pkcs.SignerInfo;"
    },
    {
      "type": "ch.qos.logback.classic.Level",
      "methods": [
        {
          "name": "valueOf",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "ch.qos.logback.classic.encoder.PatternLayoutEncoder",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "ch.qos.logback.classic.filter.LevelFilter",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "setLevel",
          "parameterTypes": [
            "ch.qos.logback.classic.Level"
          ]
        }
      ]
    },
    {
      "type": "ch.qos.logback.classic.joran.SerializedModelConfigurator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "ch.qos.logback.classic.pattern.LineSeparatorConverter",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "ch.qos.logback.classic.pattern.MessageConverter",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "ch.qos.logback.classic.spi.LogbackServiceProvider"
    },
    {
      "type": "ch.qos.logback.classic.util.DefaultJoranConfigurator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "ch.qos.logback.core.FileAppender",
      "methods": [
        {
          "name": "setAppend",
          "parameterTypes": [
            "boolean"
          ]
        },
        {
          "name": "valueOf",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "ch.qos.logback.core.OutputStreamAppender",
      "methods": [
        {
          "name": "setEncoder",
          "parameterTypes": [
            "ch.qos.logback.core.encoder.Encoder"
          ]
        }
      ]
    },
    {
      "type": "ch.qos.logback.core.UnsynchronizedAppenderBase",
      "methods": [
        {
          "name": "addFilter",
          "parameterTypes": [
            "ch.qos.logback.core.filter.Filter"
          ]
        }
      ]
    },
    {
      "type": "ch.qos.logback.core.encoder.Encoder",
      "methods": [
        {
          "name": "valueOf",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "ch.qos.logback.core.encoder.LayoutWrappingEncoder",
      "methods": [
        {
          "name": "setCharset",
          "parameterTypes": [
            "java.nio.charset.Charset"
          ]
        },
        {
          "name": "setParent",
          "parameterTypes": [
            "ch.qos.logback.core.spi.ContextAware"
          ]
        }
      ]
    },
    {
      "type": "ch.qos.logback.core.filter.AbstractMatcherFilter",
      "methods": [
        {
          "name": "setOnMatch",
          "parameterTypes": [
            "ch.qos.logback.core.spi.FilterReply"
          ]
        },
        {
          "name": "setOnMismatch",
          "parameterTypes": [
            "ch.qos.logback.core.spi.FilterReply"
          ]
        }
      ]
    },
    {
      "type": "ch.qos.logback.core.filter.Filter",
      "methods": [
        {
          "name": "valueOf",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "ch.qos.logback.core.pattern.PatternLayoutEncoderBase",
      "methods": [
        {
          "name": "setPattern",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "ch.qos.logback.core.rolling.RollingFileAppender",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "setFile",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setRollingPolicy",
          "parameterTypes": [
            "ch.qos.logback.core.rolling.RollingPolicy"
          ]
        }
      ]
    },
    {
      "type": "ch.qos.logback.core.rolling.RollingPolicy",
      "methods": [
        {
          "name": "valueOf",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "ch.qos.logback.core.rolling.RollingPolicyBase",
      "methods": [
        {
          "name": "setFileNamePattern",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setParent",
          "parameterTypes": [
            "ch.qos.logback.core.FileAppender"
          ]
        }
      ]
    },
    {
      "type": "ch.qos.logback.core.rolling.TimeBasedRollingPolicy",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "setMaxHistory",
          "parameterTypes": [
            "int"
          ]
        }
      ]
    },
    {
      "type": "ch.qos.logback.core.rolling.helper.DateTokenConverter",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "ch.qos.logback.core.spi.ContextAware",
      "methods": [
        {
          "name": "valueOf",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "ch.qos.logback.core.spi.FilterReply",
      "methods": [
        {
          "name": "valueOf",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "ch.qos.logback.core.status.NopStatusListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "ch.vorburger.mariadb4j.DB",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "<init>",
          "parameterTypes": [
            "ch.vorburger.mariadb4j.DBConfiguration"
          ]
        },
        {
          "name": "addPortAndMaybeSocketArguments",
          "parameterTypes": [
            "ch.vorburger.exec.ManagedProcessBuilder"
          ]
        },
        {
          "name": "addSocketOrPortArgument",
          "parameterTypes": [
            "ch.vorburger.exec.ManagedProcessBuilder"
          ]
        },
        {
          "name": "cleanupOnExit",
          "parameterTypes": []
        },
        {
          "name": "createDB",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "createDB",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.String",
            "java.lang.String"
          ]
        },
        {
          "name": "createDBInstallProcess",
          "parameterTypes": []
        },
        {
          "name": "dump",
          "parameterTypes": [
            "java.io.File",
            "java.util.List",
            "boolean",
            "boolean",
            "boolean",
            "java.lang.String",
            "java.lang.String"
          ]
        },
        {
          "name": "dumpSQL",
          "parameterTypes": [
            "java.io.File",
            "java.lang.String",
            "java.lang.String",
            "java.lang.String"
          ]
        },
        {
          "name": "dumpXML",
          "parameterTypes": [
            "java.io.File",
            "java.lang.String",
            "java.lang.String",
            "java.lang.String"
          ]
        },
        {
          "name": "getAbsoluteSocketFile",
          "parameterTypes": []
        },
        {
          "name": "getConfiguration",
          "parameterTypes": []
        },
        {
          "name": "getOutputStreamLogDispatcher",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "getReadyForConnectionsTag",
          "parameterTypes": []
        },
        {
          "name": "hasArgument",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "install",
          "parameterTypes": []
        },
        {
          "name": "lambda$cleanupOnExit$0",
          "parameterTypes": []
        },
        {
          "name": "lambda$cleanupOnExit$1",
          "parameterTypes": []
        },
        {
          "name": "lambda$cleanupOnExit$2",
          "parameterTypes": []
        },
        {
          "name": "lambda$cleanupOnExit$3",
          "parameterTypes": []
        },
        {
          "name": "prepareDirectories",
          "parameterTypes": []
        },
        {
          "name": "run",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "run",
          "parameterTypes": [
            "java.lang.String",
            "java.io.InputStream",
            "java.lang.String",
            "java.lang.String",
            "java.lang.String",
            "boolean"
          ]
        },
        {
          "name": "run",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.String",
            "java.lang.String"
          ]
        },
        {
          "name": "run",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.String",
            "java.lang.String",
            "java.lang.String"
          ]
        },
        {
          "name": "run",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.String",
            "java.lang.String",
            "java.lang.String",
            "boolean"
          ]
        },
        {
          "name": "run",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.String",
            "java.lang.String",
            "java.lang.String",
            "boolean",
            "boolean"
          ]
        },
        {
          "name": "source",
          "parameterTypes": [
            "java.io.InputStream"
          ]
        },
        {
          "name": "source",
          "parameterTypes": [
            "java.io.InputStream",
            "java.lang.String"
          ]
        },
        {
          "name": "source",
          "parameterTypes": [
            "java.io.InputStream",
            "java.lang.String",
            "java.lang.String",
            "java.lang.String"
          ]
        },
        {
          "name": "source",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "source",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.String"
          ]
        },
        {
          "name": "source",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.String",
            "java.lang.String",
            "java.lang.String"
          ]
        },
        {
          "name": "source",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.String",
            "java.lang.String",
            "java.lang.String",
            "boolean"
          ]
        },
        {
          "name": "start",
          "parameterTypes": []
        },
        {
          "name": "startPreparation",
          "parameterTypes": []
        },
        {
          "name": "stop",
          "parameterTypes": []
        },
        {
          "name": "unpackEmbeddedDb",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.AESCipher$General",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.ARCFOURCipher",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.ChaCha20Cipher$ChaCha20Poly1305",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.DESCipher",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.DESedeCipher",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.DHParameters",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.GaloisCounterMode$AESGCM",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.TlsKeyMaterialGenerator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.TlsMasterSecretGenerator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.TlsPrfGenerator$V12",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.glass.ui.Screen"
    },
    {
      "type": "com.sun.glass.ui.win.WinDnDClipboard"
    },
    {
      "type": "com.sun.glass.ui.win.WinGestureSupport"
    },
    {
      "type": "com.sun.glass.ui.win.WinPlatformFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.javafx.font.directwrite.DWFactory",
      "methods": [
        {
          "name": "getFactory",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.javafx.fxml.builder.web.WebViewBuilder",
      "methods": [
        {
          "name": "build",
          "parameterTypes": []
        },
        {
          "name": "create",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.javafx.logging.PrintLogger",
      "methods": [
        {
          "name": "createInstance",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.javafx.logging.jfr.JFRPulseLogger",
      "methods": [
        {
          "name": "createInstance",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.javafx.reflect.Trampoline",
      "methods": [
        {
          "name": "invoke",
          "parameterTypes": [
            "java.lang.reflect.Method",
            "java.lang.Object",
            "java.lang.Object[]"
          ]
        }
      ]
    },
    {
      "type": "com.sun.javafx.scene.control.skin.Utils",
      "methods": [
        {
          "name": "getResource",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "com.sun.javafx.tk.quantum.QuantumToolkit",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.javafx.webkit.theme.ScrollBarWidget"
    },
    {
      "type": "com.sun.org.apache.xerces.internal.jaxp.SAXParserFactoryImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.prism.GraphicsPipeline",
      "methods": [
        {
          "name": "getFontFactory",
          "parameterTypes": []
        },
        {
          "name": "getPipeline",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.prism.d3d.D3DPipeline",
      "methods": [
        {
          "name": "getInstance",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.prism.shader.FillPgram_Color_Loader",
      "methods": [
        {
          "name": "loadShader",
          "parameterTypes": [
            "com.sun.prism.ps.ShaderFactory",
            "java.io.InputStream"
          ]
        }
      ]
    },
    {
      "type": "com.sun.prism.shader.FillPgram_LinearGradient_PAD_Loader",
      "methods": [
        {
          "name": "loadShader",
          "parameterTypes": [
            "com.sun.prism.ps.ShaderFactory",
            "java.io.InputStream"
          ]
        }
      ]
    },
    {
      "type": "com.sun.prism.shader.Mask_TextureSuper_Loader",
      "methods": [
        {
          "name": "loadShader",
          "parameterTypes": [
            "com.sun.prism.ps.ShaderFactory",
            "java.io.InputStream"
          ]
        }
      ]
    },
    {
      "type": "com.sun.prism.shader.Solid_Color_Loader",
      "methods": [
        {
          "name": "loadShader",
          "parameterTypes": [
            "com.sun.prism.ps.ShaderFactory",
            "java.io.InputStream"
          ]
        }
      ]
    },
    {
      "type": "com.sun.prism.shader.Solid_TextureFirstPassLCD_Loader",
      "methods": [
        {
          "name": "loadShader",
          "parameterTypes": [
            "com.sun.prism.ps.ShaderFactory",
            "java.io.InputStream"
          ]
        }
      ]
    },
    {
      "type": "com.sun.prism.shader.Solid_TextureRGB_Loader",
      "methods": [
        {
          "name": "loadShader",
          "parameterTypes": [
            "com.sun.prism.ps.ShaderFactory",
            "java.io.InputStream"
          ]
        }
      ]
    },
    {
      "type": "com.sun.prism.shader.Solid_TextureSecondPassLCD_Loader",
      "methods": [
        {
          "name": "loadShader",
          "parameterTypes": [
            "com.sun.prism.ps.ShaderFactory",
            "java.io.InputStream"
          ]
        }
      ]
    },
    {
      "type": "com.sun.prism.shader.Texture_Color_Loader",
      "methods": [
        {
          "name": "loadShader",
          "parameterTypes": [
            "com.sun.prism.ps.ShaderFactory",
            "java.io.InputStream"
          ]
        }
      ]
    },
    {
      "type": "com.sun.prism.shader.Texture_LinearGradient_PAD_Loader",
      "methods": [
        {
          "name": "loadShader",
          "parameterTypes": [
            "com.sun.prism.ps.ShaderFactory",
            "java.io.InputStream"
          ]
        }
      ]
    },
    {
      "type": "com.sun.scenario.effect.impl.hw.d3d.D3DShaderSource",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.scenario.effect.impl.prism.PrRenderer",
      "methods": [
        {
          "name": "createRenderer",
          "parameterTypes": [
            "com.sun.scenario.effect.FilterContext"
          ]
        }
      ]
    },
    {
      "type": "com.sun.scenario.effect.impl.prism.ps.PPSLinearConvolveShadowPeer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "com.sun.scenario.effect.FilterContext",
            "com.sun.scenario.effect.impl.Renderer",
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "com.sun.scenario.effect.impl.prism.ps.PPSRenderer",
      "methods": [
        {
          "name": "createRenderer",
          "parameterTypes": [
            "com.sun.scenario.effect.FilterContext"
          ]
        }
      ]
    },
    {
      "type": "com.sun.xml.internal.stream.XMLInputFactoryImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.awt.SequencedEvent"
    },
    {
      "type": "java.io.FilePermission"
    },
    {
      "type": "java.lang.Character",
      "methods": [
        {
          "name": "isIdeographic",
          "parameterTypes": [
            "int"
          ]
        }
      ]
    },
    {
      "type": "java.lang.Class",
      "methods": [
        {
          "name": "getModule",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.Module",
      "methods": [
        {
          "name": "getResourceAsStream",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "java.lang.RuntimePermission"
    },
    {
      "type": "java.lang.String"
    },
    {
      "type": "java.lang.Thread",
      "allDeclaredFields": true,
      "fields": [
        {
          "name": "threadLocalRandomProbe"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Runnable"
          ]
        },
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Runnable",
            "java.lang.String"
          ]
        },
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Runnable",
            "java.security.AccessControlContext"
          ]
        },
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String",
            "int",
            "boolean"
          ]
        },
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.ThreadGroup",
            "java.lang.Runnable"
          ]
        },
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.ThreadGroup",
            "java.lang.Runnable",
            "java.lang.String"
          ]
        },
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.ThreadGroup",
            "java.lang.Runnable",
            "java.lang.String",
            "long"
          ]
        },
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.ThreadGroup",
            "java.lang.Runnable",
            "java.lang.String",
            "long",
            "boolean"
          ]
        },
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.ThreadGroup",
            "java.lang.String"
          ]
        },
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.ThreadGroup",
            "java.lang.String",
            "int",
            "java.lang.Runnable",
            "long",
            "java.security.AccessControlContext"
          ]
        },
        {
          "name": "alive",
          "parameterTypes": []
        },
        {
          "name": "asyncGetStackTrace",
          "parameterTypes": []
        },
        {
          "name": "checkAccess",
          "parameterTypes": []
        },
        {
          "name": "clearInterrupt",
          "parameterTypes": []
        },
        {
          "name": "clearReferences",
          "parameterTypes": []
        },
        {
          "name": "clone",
          "parameterTypes": []
        },
        {
          "name": "countStackFrames",
          "parameterTypes": []
        },
        {
          "name": "daemon",
          "parameterTypes": [
            "boolean"
          ]
        },
        {
          "name": "dispatchUncaughtException",
          "parameterTypes": [
            "java.lang.Throwable"
          ]
        },
        {
          "name": "exit",
          "parameterTypes": []
        },
        {
          "name": "getAndClearInterrupt",
          "parameterTypes": []
        },
        {
          "name": "getContextClassLoader",
          "parameterTypes": []
        },
        {
          "name": "getContinuation",
          "parameterTypes": []
        },
        {
          "name": "getId",
          "parameterTypes": []
        },
        {
          "name": "getName",
          "parameterTypes": []
        },
        {
          "name": "getPriority",
          "parameterTypes": []
        },
        {
          "name": "getStackTrace",
          "parameterTypes": []
        },
        {
          "name": "getStackTrace0",
          "parameterTypes": []
        },
        {
          "name": "getState",
          "parameterTypes": []
        },
        {
          "name": "getThreadGroup",
          "parameterTypes": []
        },
        {
          "name": "getUncaughtExceptionHandler",
          "parameterTypes": []
        },
        {
          "name": "headStackableScopes",
          "parameterTypes": []
        },
        {
          "name": "inheritScopedValueBindings",
          "parameterTypes": [
            "jdk.internal.vm.ThreadContainer"
          ]
        },
        {
          "name": "interrupt",
          "parameterTypes": []
        },
        {
          "name": "interrupt0",
          "parameterTypes": []
        },
        {
          "name": "isAlive",
          "parameterTypes": []
        },
        {
          "name": "isDaemon",
          "parameterTypes": []
        },
        {
          "name": "isInterrupted",
          "parameterTypes": []
        },
        {
          "name": "isTerminated",
          "parameterTypes": []
        },
        {
          "name": "isVirtual",
          "parameterTypes": []
        },
        {
          "name": "join",
          "parameterTypes": []
        },
        {
          "name": "join",
          "parameterTypes": [
            "long"
          ]
        },
        {
          "name": "join",
          "parameterTypes": [
            "long",
            "int"
          ]
        },
        {
          "name": "join",
          "parameterTypes": [
            "java.time.Duration"
          ]
        },
        {
          "name": "priority",
          "parameterTypes": [
            "int"
          ]
        },
        {
          "name": "resume",
          "parameterTypes": []
        },
        {
          "name": "run",
          "parameterTypes": []
        },
        {
          "name": "runWith",
          "parameterTypes": [
            "java.lang.Object",
            "java.lang.Runnable"
          ]
        },
        {
          "name": "setContextClassLoader",
          "parameterTypes": [
            "java.lang.ClassLoader"
          ]
        },
        {
          "name": "setContinuation",
          "parameterTypes": [
            "jdk.internal.vm.Continuation"
          ]
        },
        {
          "name": "setCurrentThread",
          "parameterTypes": [
            "java.lang.Thread"
          ]
        },
        {
          "name": "setDaemon",
          "parameterTypes": [
            "boolean"
          ]
        },
        {
          "name": "setInterrupt",
          "parameterTypes": []
        },
        {
          "name": "setName",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setNativeName",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setPriority",
          "parameterTypes": [
            "int"
          ]
        },
        {
          "name": "setPriority0",
          "parameterTypes": [
            "int"
          ]
        },
        {
          "name": "setThreadContainer",
          "parameterTypes": [
            "jdk.internal.vm.ThreadContainer"
          ]
        },
        {
          "name": "setUncaughtExceptionHandler",
          "parameterTypes": [
            "java.lang.Thread$UncaughtExceptionHandler"
          ]
        },
        {
          "name": "start",
          "parameterTypes": []
        },
        {
          "name": "start",
          "parameterTypes": [
            "jdk.internal.vm.ThreadContainer"
          ]
        },
        {
          "name": "start0",
          "parameterTypes": []
        },
        {
          "name": "stop",
          "parameterTypes": []
        },
        {
          "name": "suspend",
          "parameterTypes": []
        },
        {
          "name": "threadContainer",
          "parameterTypes": []
        },
        {
          "name": "threadId",
          "parameterTypes": []
        },
        {
          "name": "threadState",
          "parameterTypes": []
        },
        {
          "name": "toString",
          "parameterTypes": []
        },
        {
          "name": "uncaughtExceptionHandler",
          "parameterTypes": [
            "java.lang.Thread$UncaughtExceptionHandler"
          ]
        }
      ]
    },
    {
      "type": "java.net.NetPermission"
    },
    {
      "type": "java.net.SocketPermission"
    },
    {
      "type": "java.net.URLPermission",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "java.nio.ByteBuffer",
      "methods": [
        {
          "name": "order",
          "parameterTypes": [
            "java.nio.ByteOrder"
          ]
        }
      ]
    },
    {
      "type": "java.nio.ByteOrder",
      "methods": [
        {
          "name": "nativeOrder",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.nio.charset.Charset",
      "methods": [
        {
          "name": "valueOf",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "java.security.AlgorithmParametersSpi"
    },
    {
      "type": "java.security.AllPermission"
    },
    {
      "type": "java.security.KeyStoreSpi"
    },
    {
      "type": "java.security.SecureRandomParameters"
    },
    {
      "type": "java.security.SecurityPermission"
    },
    {
      "type": "java.security.interfaces.RSAPrivateKey"
    },
    {
      "type": "java.security.interfaces.RSAPublicKey"
    },
    {
      "type": "java.util.Date"
    },
    {
      "type": "java.util.PropertyPermission"
    },
    {
      "type": "java.util.concurrent.ForkJoinTask",
      "fields": [
        {
          "name": "aux"
        },
        {
          "name": "status"
        }
      ]
    },
    {
      "type": "java.util.concurrent.atomic.AtomicBoolean",
      "fields": [
        {
          "name": "value"
        }
      ]
    },
    {
      "type": "java.util.concurrent.atomic.AtomicReference",
      "fields": [
        {
          "name": "value"
        }
      ]
    },
    {
      "type": "java.util.concurrent.atomic.Striped64",
      "fields": [
        {
          "name": "base"
        },
        {
          "name": "cellsBusy"
        }
      ]
    },
    {
      "type": "javafx.application.Application",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "getHostServices",
          "parameterTypes": []
        },
        {
          "name": "getParameters",
          "parameterTypes": []
        },
        {
          "name": "init",
          "parameterTypes": []
        },
        {
          "name": "notifyPreloader",
          "parameterTypes": [
            "javafx.application.Preloader$PreloaderNotification"
          ]
        },
        {
          "name": "start",
          "parameterTypes": [
            "javafx.stage.Stage"
          ]
        },
        {
          "name": "stop",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "javafx.fxml.FXMLLoader"
    },
    {
      "type": "javafx.geometry.Insets",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "double",
            "double",
            "double",
            "double"
          ]
        }
      ]
    },
    {
      "type": "javafx.geometry.Pos",
      "methods": [
        {
          "name": "valueOf",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "javafx.scene.Camera"
    },
    {
      "type": "javafx.scene.Node",
      "methods": [
        {
          "name": "getId",
          "parameterTypes": []
        },
        {
          "name": "setId",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "javafx.scene.ParallelCamera"
    },
    {
      "type": "javafx.scene.Parent"
    },
    {
      "type": "javafx.scene.Scene"
    },
    {
      "type": "javafx.scene.control.Control"
    },
    {
      "type": "javafx.scene.control.Menu",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "getItems",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "javafx.scene.control.MenuBar",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "getMenus",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "javafx.scene.control.MenuItem",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "getId",
          "parameterTypes": []
        },
        {
          "name": "setDisable",
          "parameterTypes": [
            "boolean"
          ]
        },
        {
          "name": "setId",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setMnemonicParsing",
          "parameterTypes": [
            "boolean"
          ]
        },
        {
          "name": "setOnAction",
          "parameterTypes": [
            "javafx.event.EventHandler"
          ]
        },
        {
          "name": "setText",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "javafx.scene.control.SeparatorMenuItem",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "javafx.scene.effect.Effect"
    },
    {
      "type": "javafx.scene.image.Image"
    },
    {
      "type": "javafx.scene.image.ImageView"
    },
    {
      "type": "javafx.scene.layout.Pane",
      "methods": [
        {
          "name": "getChildren",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "javafx.scene.layout.Region",
      "methods": [
        {
          "name": "setPrefHeight",
          "parameterTypes": [
            "double"
          ]
        },
        {
          "name": "setPrefWidth",
          "parameterTypes": [
            "double"
          ]
        }
      ]
    },
    {
      "type": "javafx.scene.layout.StackPane",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "getAlignment",
          "parameterTypes": [
            "javafx.scene.Node"
          ]
        },
        {
          "name": "getAlignment",
          "parameterTypes": [
            "javafx.scene.Parent"
          ]
        },
        {
          "name": "getAlignment",
          "parameterTypes": [
            "javafx.scene.control.Control"
          ]
        },
        {
          "name": "getAlignment",
          "parameterTypes": [
            "javafx.scene.control.MenuBar"
          ]
        },
        {
          "name": "getAlignment",
          "parameterTypes": [
            "javafx.scene.control.Skinnable"
          ]
        },
        {
          "name": "getAlignment",
          "parameterTypes": [
            "javafx.scene.layout.Region"
          ]
        },
        {
          "name": "getAlignment",
          "parameterTypes": [
            "javafx.scene.web.WebView"
          ]
        },
        {
          "name": "isAlignment",
          "parameterTypes": [
            "javafx.scene.Parent"
          ]
        },
        {
          "name": "isAlignment",
          "parameterTypes": [
            "javafx.scene.control.Control"
          ]
        },
        {
          "name": "isAlignment",
          "parameterTypes": [
            "javafx.scene.control.MenuBar"
          ]
        },
        {
          "name": "isAlignment",
          "parameterTypes": [
            "javafx.scene.control.Skinnable"
          ]
        },
        {
          "name": "isAlignment",
          "parameterTypes": [
            "javafx.scene.layout.Region"
          ]
        },
        {
          "name": "isAlignment",
          "parameterTypes": [
            "javafx.scene.web.WebView"
          ]
        },
        {
          "name": "setAlignment",
          "parameterTypes": [
            "java.lang.Object",
            "java.lang.String"
          ]
        },
        {
          "name": "setAlignment",
          "parameterTypes": [
            "javafx.css.Styleable",
            "java.lang.String"
          ]
        },
        {
          "name": "setAlignment",
          "parameterTypes": [
            "javafx.event.EventTarget",
            "java.lang.String"
          ]
        },
        {
          "name": "setAlignment",
          "parameterTypes": [
            "javafx.scene.Node",
            "java.lang.String"
          ]
        },
        {
          "name": "setAlignment",
          "parameterTypes": [
            "javafx.scene.Node",
            "javafx.geometry.Pos"
          ]
        },
        {
          "name": "setAlignment",
          "parameterTypes": [
            "javafx.scene.Parent",
            "java.lang.String"
          ]
        },
        {
          "name": "setAlignment",
          "parameterTypes": [
            "javafx.scene.Parent",
            "javafx.geometry.Pos"
          ]
        },
        {
          "name": "setAlignment",
          "parameterTypes": [
            "javafx.scene.control.Control",
            "java.lang.String"
          ]
        },
        {
          "name": "setAlignment",
          "parameterTypes": [
            "javafx.scene.control.Control",
            "javafx.geometry.Pos"
          ]
        },
        {
          "name": "setAlignment",
          "parameterTypes": [
            "javafx.scene.control.MenuBar",
            "java.lang.String"
          ]
        },
        {
          "name": "setAlignment",
          "parameterTypes": [
            "javafx.scene.control.MenuBar",
            "javafx.geometry.Pos"
          ]
        },
        {
          "name": "setAlignment",
          "parameterTypes": [
            "javafx.scene.control.Skinnable",
            "java.lang.String"
          ]
        },
        {
          "name": "setAlignment",
          "parameterTypes": [
            "javafx.scene.control.Skinnable",
            "javafx.geometry.Pos"
          ]
        },
        {
          "name": "setAlignment",
          "parameterTypes": [
            "javafx.scene.layout.Region",
            "java.lang.String"
          ]
        },
        {
          "name": "setAlignment",
          "parameterTypes": [
            "javafx.scene.layout.Region",
            "javafx.geometry.Pos"
          ]
        },
        {
          "name": "setAlignment",
          "parameterTypes": [
            "javafx.scene.web.WebView",
            "java.lang.String"
          ]
        },
        {
          "name": "setAlignment",
          "parameterTypes": [
            "javafx.scene.web.WebView",
            "javafx.geometry.Pos"
          ]
        },
        {
          "name": "setMargin",
          "parameterTypes": [
            "javafx.scene.Node",
            "javafx.geometry.Insets"
          ]
        },
        {
          "name": "setMargin",
          "parameterTypes": [
            "javafx.scene.Parent",
            "javafx.geometry.Insets"
          ]
        },
        {
          "name": "setMargin",
          "parameterTypes": [
            "javafx.scene.web.WebView",
            "javafx.geometry.Insets"
          ]
        }
      ]
    },
    {
      "type": "javafx.scene.shape.Rectangle"
    },
    {
      "type": "javafx.scene.shape.SVGPath"
    },
    {
      "type": "javafx.scene.shape.Shape"
    },
    {
      "type": "javafx.scene.text.Font"
    },
    {
      "type": "javafx.scene.text.Text"
    },
    {
      "type": "javafx.scene.transform.Rotate",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "<init>",
          "parameterTypes": [
            "double"
          ]
        },
        {
          "name": "<init>",
          "parameterTypes": [
            "double",
            "double",
            "double"
          ]
        },
        {
          "name": "<init>",
          "parameterTypes": [
            "double",
            "double",
            "double",
            "double"
          ]
        },
        {
          "name": "<init>",
          "parameterTypes": [
            "double",
            "double",
            "double",
            "double",
            "javafx.geometry.Point3D"
          ]
        },
        {
          "name": "<init>",
          "parameterTypes": [
            "double",
            "javafx.geometry.Point3D"
          ]
        },
        {
          "name": "angleProperty",
          "parameterTypes": []
        },
        {
          "name": "appendTo",
          "parameterTypes": [
            "javafx.scene.transform.Affine"
          ]
        },
        {
          "name": "apply",
          "parameterTypes": [
            "com.sun.javafx.geom.transform.Affine3D"
          ]
        },
        {
          "name": "axisProperty",
          "parameterTypes": []
        },
        {
          "name": "clone",
          "parameterTypes": []
        },
        {
          "name": "computeIs2D",
          "parameterTypes": []
        },
        {
          "name": "computeIsIdentity",
          "parameterTypes": []
        },
        {
          "name": "createConcatenation",
          "parameterTypes": [
            "javafx.scene.transform.Transform"
          ]
        },
        {
          "name": "createInverse",
          "parameterTypes": []
        },
        {
          "name": "deltaTransform",
          "parameterTypes": [
            "double",
            "double"
          ]
        },
        {
          "name": "deltaTransform",
          "parameterTypes": [
            "double",
            "double",
            "double"
          ]
        },
        {
          "name": "derive",
          "parameterTypes": [
            "com.sun.javafx.geom.transform.BaseTransform"
          ]
        },
        {
          "name": "fill2DArray",
          "parameterTypes": [
            "double[]"
          ]
        },
        {
          "name": "fill3DArray",
          "parameterTypes": [
            "double[]"
          ]
        },
        {
          "name": "getAngle",
          "parameterTypes": []
        },
        {
          "name": "getAxis",
          "parameterTypes": []
        },
        {
          "name": "getMxx",
          "parameterTypes": []
        },
        {
          "name": "getMxy",
          "parameterTypes": []
        },
        {
          "name": "getMxz",
          "parameterTypes": []
        },
        {
          "name": "getMyx",
          "parameterTypes": []
        },
        {
          "name": "getMyy",
          "parameterTypes": []
        },
        {
          "name": "getMyz",
          "parameterTypes": []
        },
        {
          "name": "getMzx",
          "parameterTypes": []
        },
        {
          "name": "getMzy",
          "parameterTypes": []
        },
        {
          "name": "getMzz",
          "parameterTypes": []
        },
        {
          "name": "getPivotX",
          "parameterTypes": []
        },
        {
          "name": "getPivotY",
          "parameterTypes": []
        },
        {
          "name": "getPivotZ",
          "parameterTypes": []
        },
        {
          "name": "getTx",
          "parameterTypes": []
        },
        {
          "name": "getTy",
          "parameterTypes": []
        },
        {
          "name": "getTz",
          "parameterTypes": []
        },
        {
          "name": "inverseDeltaTransform",
          "parameterTypes": [
            "double",
            "double"
          ]
        },
        {
          "name": "inverseDeltaTransform",
          "parameterTypes": [
            "double",
            "double",
            "double"
          ]
        },
        {
          "name": "inverseTransform",
          "parameterTypes": [
            "double",
            "double"
          ]
        },
        {
          "name": "inverseTransform",
          "parameterTypes": [
            "double",
            "double",
            "double"
          ]
        },
        {
          "name": "inverseTransform2DPointsImpl",
          "parameterTypes": [
            "double[]",
            "int",
            "double[]",
            "int",
            "int"
          ]
        },
        {
          "name": "inverseTransform3DPointsImpl",
          "parameterTypes": [
            "double[]",
            "int",
            "double[]",
            "int",
            "int"
          ]
        },
        {
          "name": "pivotXProperty",
          "parameterTypes": []
        },
        {
          "name": "pivotYProperty",
          "parameterTypes": []
        },
        {
          "name": "pivotZProperty",
          "parameterTypes": []
        },
        {
          "name": "prependTo",
          "parameterTypes": [
            "javafx.scene.transform.Affine"
          ]
        },
        {
          "name": "setAngle",
          "parameterTypes": [
            "double"
          ]
        },
        {
          "name": "setAxis",
          "parameterTypes": [
            "javafx.geometry.Point3D"
          ]
        },
        {
          "name": "setPivotX",
          "parameterTypes": [
            "double"
          ]
        },
        {
          "name": "setPivotY",
          "parameterTypes": [
            "double"
          ]
        },
        {
          "name": "setPivotZ",
          "parameterTypes": [
            "double"
          ]
        },
        {
          "name": "toString",
          "parameterTypes": []
        },
        {
          "name": "transform",
          "parameterTypes": [
            "double",
            "double"
          ]
        },
        {
          "name": "transform",
          "parameterTypes": [
            "double",
            "double",
            "double"
          ]
        },
        {
          "name": "transform2DPointsImpl",
          "parameterTypes": [
            "double[]",
            "int",
            "double[]",
            "int",
            "int"
          ]
        },
        {
          "name": "transform3DPointsImpl",
          "parameterTypes": [
            "double[]",
            "int",
            "double[]",
            "int",
            "int"
          ]
        },
        {
          "name": "transformChanged",
          "parameterTypes": []
        },
        {
          "name": "updateCache",
          "parameterTypes": []
        },
        {
          "name": "updateInverseCache",
          "parameterTypes": []
        },
        {
          "name": "validate",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "javafx.scene.transform.Transform",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "add",
          "parameterTypes": [
            "javafx.scene.Node"
          ]
        },
        {
          "name": "addEventFilter",
          "parameterTypes": [
            "javafx.event.EventType",
            "javafx.event.EventHandler"
          ]
        },
        {
          "name": "addEventHandler",
          "parameterTypes": [
            "javafx.event.EventType",
            "javafx.event.EventHandler"
          ]
        },
        {
          "name": "appendTo",
          "parameterTypes": [
            "javafx.scene.transform.Affine"
          ]
        },
        {
          "name": "apply",
          "parameterTypes": [
            "com.sun.javafx.geom.transform.Affine3D"
          ]
        },
        {
          "name": "buildEventDispatchChain",
          "parameterTypes": [
            "javafx.event.EventDispatchChain"
          ]
        },
        {
          "name": "checkRequestedMAT",
          "parameterTypes": [
            "javafx.scene.transform.MatrixType"
          ]
        },
        {
          "name": "clearInverseCache",
          "parameterTypes": []
        },
        {
          "name": "clone",
          "parameterTypes": []
        },
        {
          "name": "column",
          "parameterTypes": [
            "javafx.scene.transform.MatrixType",
            "int"
          ]
        },
        {
          "name": "column",
          "parameterTypes": [
            "javafx.scene.transform.MatrixType",
            "int",
            "double[]"
          ]
        },
        {
          "name": "computeIs2D",
          "parameterTypes": []
        },
        {
          "name": "computeIsIdentity",
          "parameterTypes": []
        },
        {
          "name": "createConcatenation",
          "parameterTypes": [
            "javafx.scene.transform.Transform"
          ]
        },
        {
          "name": "createInverse",
          "parameterTypes": []
        },
        {
          "name": "deltaTransform",
          "parameterTypes": [
            "double",
            "double"
          ]
        },
        {
          "name": "deltaTransform",
          "parameterTypes": [
            "double",
            "double",
            "double"
          ]
        },
        {
          "name": "deltaTransform",
          "parameterTypes": [
            "javafx.geometry.Point2D"
          ]
        },
        {
          "name": "deltaTransform",
          "parameterTypes": [
            "javafx.geometry.Point3D"
          ]
        },
        {
          "name": "derive",
          "parameterTypes": [
            "com.sun.javafx.geom.transform.BaseTransform"
          ]
        },
        {
          "name": "determinant",
          "parameterTypes": []
        },
        {
          "name": "ensureCanTransform2DPoint",
          "parameterTypes": []
        },
        {
          "name": "fill2DArray",
          "parameterTypes": [
            "double[]"
          ]
        },
        {
          "name": "fill3DArray",
          "parameterTypes": [
            "double[]"
          ]
        },
        {
          "name": "getElement",
          "parameterTypes": [
            "javafx.scene.transform.MatrixType",
            "int",
            "int"
          ]
        },
        {
          "name": "getFixedSrcOffset",
          "parameterTypes": [
            "double[]",
            "int",
            "double[]",
            "int",
            "int",
            "int"
          ]
        },
        {
          "name": "getInternalEventDispatcher",
          "parameterTypes": []
        },
        {
          "name": "getInverseCache",
          "parameterTypes": []
        },
        {
          "name": "getMxx",
          "parameterTypes": []
        },
        {
          "name": "getMxy",
          "parameterTypes": []
        },
        {
          "name": "getMxz",
          "parameterTypes": []
        },
        {
          "name": "getMyx",
          "parameterTypes": []
        },
        {
          "name": "getMyy",
          "parameterTypes": []
        },
        {
          "name": "getMyz",
          "parameterTypes": []
        },
        {
          "name": "getMzx",
          "parameterTypes": []
        },
        {
          "name": "getMzy",
          "parameterTypes": []
        },
        {
          "name": "getMzz",
          "parameterTypes": []
        },
        {
          "name": "getOnTransformChanged",
          "parameterTypes": []
        },
        {
          "name": "getTx",
          "parameterTypes": []
        },
        {
          "name": "getTy",
          "parameterTypes": []
        },
        {
          "name": "getTz",
          "parameterTypes": []
        },
        {
          "name": "identityProperty",
          "parameterTypes": []
        },
        {
          "name": "inverseDeltaTransform",
          "parameterTypes": [
            "double",
            "double"
          ]
        },
        {
          "name": "inverseDeltaTransform",
          "parameterTypes": [
            "double",
            "double",
            "double"
          ]
        },
        {
          "name": "inverseDeltaTransform",
          "parameterTypes": [
            "javafx.geometry.Point2D"
          ]
        },
        {
          "name": "inverseDeltaTransform",
          "parameterTypes": [
            "javafx.geometry.Point3D"
          ]
        },
        {
          "name": "inverseTransform",
          "parameterTypes": [
            "double",
            "double"
          ]
        },
        {
          "name": "inverseTransform",
          "parameterTypes": [
            "double",
            "double",
            "double"
          ]
        },
        {
          "name": "inverseTransform",
          "parameterTypes": [
            "javafx.geometry.Bounds"
          ]
        },
        {
          "name": "inverseTransform",
          "parameterTypes": [
            "javafx.geometry.Point2D"
          ]
        },
        {
          "name": "inverseTransform",
          "parameterTypes": [
            "javafx.geometry.Point3D"
          ]
        },
        {
          "name": "inverseTransform2DPoints",
          "parameterTypes": [
            "double[]",
            "int",
            "double[]",
            "int",
            "int"
          ]
        },
        {
          "name": "inverseTransform2DPointsImpl",
          "parameterTypes": [
            "double[]",
            "int",
            "double[]",
            "int",
            "int"
          ]
        },
        {
          "name": "inverseTransform3DPoints",
          "parameterTypes": [
            "double[]",
            "int",
            "double[]",
            "int",
            "int"
          ]
        },
        {
          "name": "inverseTransform3DPointsImpl",
          "parameterTypes": [
            "double[]",
            "int",
            "double[]",
            "int",
            "int"
          ]
        },
        {
          "name": "isIdentity",
          "parameterTypes": []
        },
        {
          "name": "isType2D",
          "parameterTypes": []
        },
        {
          "name": "onTransformChangedProperty",
          "parameterTypes": []
        },
        {
          "name": "prependTo",
          "parameterTypes": [
            "javafx.scene.transform.Affine"
          ]
        },
        {
          "name": "remove",
          "parameterTypes": [
            "javafx.scene.Node"
          ]
        },
        {
          "name": "removeEventFilter",
          "parameterTypes": [
            "javafx.event.EventType",
            "javafx.event.EventHandler"
          ]
        },
        {
          "name": "removeEventHandler",
          "parameterTypes": [
            "javafx.event.EventType",
            "javafx.event.EventHandler"
          ]
        },
        {
          "name": "row",
          "parameterTypes": [
            "javafx.scene.transform.MatrixType",
            "int"
          ]
        },
        {
          "name": "row",
          "parameterTypes": [
            "javafx.scene.transform.MatrixType",
            "int",
            "double[]"
          ]
        },
        {
          "name": "setOnTransformChanged",
          "parameterTypes": [
            "javafx.event.EventHandler"
          ]
        },
        {
          "name": "similarTo",
          "parameterTypes": [
            "javafx.scene.transform.Transform",
            "javafx.geometry.Bounds",
            "double"
          ]
        },
        {
          "name": "toArray",
          "parameterTypes": [
            "javafx.scene.transform.MatrixType"
          ]
        },
        {
          "name": "toArray",
          "parameterTypes": [
            "javafx.scene.transform.MatrixType",
            "double[]"
          ]
        },
        {
          "name": "transform",
          "parameterTypes": [
            "double",
            "double"
          ]
        },
        {
          "name": "transform",
          "parameterTypes": [
            "double",
            "double",
            "double"
          ]
        },
        {
          "name": "transform",
          "parameterTypes": [
            "javafx.geometry.Bounds"
          ]
        },
        {
          "name": "transform",
          "parameterTypes": [
            "javafx.geometry.Point2D"
          ]
        },
        {
          "name": "transform",
          "parameterTypes": [
            "javafx.geometry.Point3D"
          ]
        },
        {
          "name": "transform2DPoints",
          "parameterTypes": [
            "double[]",
            "int",
            "double[]",
            "int",
            "int"
          ]
        },
        {
          "name": "transform2DPointsImpl",
          "parameterTypes": [
            "double[]",
            "int",
            "double[]",
            "int",
            "int"
          ]
        },
        {
          "name": "transform3DPoints",
          "parameterTypes": [
            "double[]",
            "int",
            "double[]",
            "int",
            "int"
          ]
        },
        {
          "name": "transform3DPointsImpl",
          "parameterTypes": [
            "double[]",
            "int",
            "double[]",
            "int",
            "int"
          ]
        },
        {
          "name": "transformChanged",
          "parameterTypes": []
        },
        {
          "name": "transformDiff",
          "parameterTypes": [
            "javafx.scene.transform.Transform",
            "double",
            "double"
          ]
        },
        {
          "name": "transformDiff",
          "parameterTypes": [
            "javafx.scene.transform.Transform",
            "double",
            "double",
            "double"
          ]
        },
        {
          "name": "type2DProperty",
          "parameterTypes": []
        },
        {
          "name": "validate",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "javafx.scene.web.WebView"
    },
    {
      "type": "javafx.stage.PopupWindow"
    },
    {
      "type": "javafx.stage.Stage"
    },
    {
      "type": "javafx.stage.Window"
    },
    {
      "type": "javax.imageio.spi.ImageReaderSpi"
    },
    {
      "type": "javax.imageio.spi.ImageReaderWriterSpi",
      "methods": [
        {
          "name": "getFileSuffixes",
          "parameterTypes": []
        },
        {
          "name": "getFormatNames",
          "parameterTypes": []
        },
        {
          "name": "getMIMETypes",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "javax.imageio.spi.ImageWriterSpi"
    },
    {
      "type": "javax.security.auth.x500.X500Principal",
      "fields": [
        {
          "name": "thisX500Name"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "sun.security.x509.X500Name"
          ]
        }
      ]
    },
    {
      "type": "javax.smartcardio.CardPermission"
    },
    {
      "type": "jdk.internal.misc.Unsafe"
    },
    {
      "type": "org.apache.logging.log4j.spi.ExtendedLogger"
    },
    {
      "type": "org.apache.logging.slf4j.SLF4JProvider"
    },
    {
      "type": "org.eclipse.core.runtime.FileLocator"
    },
    {
      "type": "org.slf4j.Logger"
    },
    {
      "type": "org.slf4j.spi.LocationAwareLogger"
    },
    {
      "type": "sun.awt.Symbol",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.awt.shell.Win32ShellFolderManager2",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.awt.windows.WingDings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.java2d.marlin.DMarlinRenderingEngine",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.misc.Unsafe",
      "fields": [
        {
          "name": "theUnsafe"
        }
      ]
    },
    {
      "type": "sun.security.pkcs12.PKCS12KeyStore",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.pkcs12.PKCS12KeyStore$DualFormatPKCS12",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.DRBG",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.security.SecureRandomParameters"
          ]
        }
      ]
    },
    {
      "type": "sun.security.provider.DSA$SHA224withDSA",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.DSA$SHA256withDSA",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.JavaKeyStore$DualFormatJKS",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.JavaKeyStore$JKS",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.MD5",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.SHA",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.SHA2$SHA224",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.SHA2$SHA256",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.SHA5$SHA384",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.SHA5$SHA512",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.X509Factory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.certpath.PKIXCertPathValidator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.rsa.PSSParameters",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.rsa.RSAKeyFactory$Legacy",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.rsa.RSAPSSSignature",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.rsa.RSASignature$SHA224withRSA",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.rsa.RSASignature$SHA256withRSA",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.ssl.KeyManagerFactoryImpl$SunX509",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.ssl.SSLContextImpl$DefaultSSLContext",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.ssl.TrustManagerFactoryImpl$PKIXFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.util.ObjectIdentifier"
    },
    {
      "type": "sun.security.x509.AuthorityInfoAccessExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.AuthorityKeyIdentifierExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.BasicConstraintsExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.CRLDistributionPointsExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.CertificateExtensions"
    },
    {
      "type": "sun.security.x509.CertificatePoliciesExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.ExtendedKeyUsageExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.IssuerAlternativeNameExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.KeyUsageExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.NetscapeCertTypeExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.PrivateKeyUsageExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.SubjectAlternativeNameExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.SubjectKeyIdentifierExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "wxdgaming.mariadb.server.DBFactory",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "getConfigBuilder",
          "parameterTypes": []
        },
        {
          "name": "getMyDB",
          "parameterTypes": []
        },
        {
          "name": "init",
          "parameterTypes": [
            "java.lang.String",
            "int",
            "java.lang.String",
            "java.lang.String"
          ]
        },
        {
          "name": "isStarted",
          "parameterTypes": []
        },
        {
          "name": "print",
          "parameterTypes": []
        },
        {
          "name": "sourceSql",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "stop",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "wxdgaming.mariadb.server.LogbackResetTimeFilter",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "wxdgaming.mariadb.server.MyDB",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "<init>",
          "parameterTypes": [
            "ch.vorburger.mariadb4j.DBConfiguration",
            "java.lang.String",
            "java.lang.String",
            "java.lang.String",
            "int"
          ]
        },
        {
          "name": "bakSql",
          "parameterTypes": []
        },
        {
          "name": "check",
          "parameterTypes": [
            "java.lang.Throwable"
          ]
        },
        {
          "name": "getBak_Time",
          "parameterTypes": []
        },
        {
          "name": "getData_base",
          "parameterTypes": []
        },
        {
          "name": "getPwd",
          "parameterTypes": []
        },
        {
          "name": "getTimer",
          "parameterTypes": []
        },
        {
          "name": "getUser",
          "parameterTypes": []
        },
        {
          "name": "initBakTimer",
          "parameterTypes": []
        },
        {
          "name": "initDb",
          "parameterTypes": []
        },
        {
          "name": "start",
          "parameterTypes": []
        },
        {
          "name": "stop",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "wxdgaming.mariadb.winfm.DbApplication",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "closeSelect",
          "parameterTypes": [
            "javafx.stage.Stage"
          ]
        },
        {
          "name": "lambda$start$2",
          "parameterTypes": [
            "javafx.stage.Stage",
            "javafx.stage.WindowEvent"
          ]
        },
        {
          "name": "lambda$start$3",
          "parameterTypes": [
            "javafx.stage.Stage"
          ]
        },
        {
          "name": "setIcon",
          "parameterTypes": [
            "javafx.stage.Stage"
          ]
        },
        {
          "name": "start",
          "parameterTypes": [
            "javafx.stage.Stage"
          ]
        }
      ]
    },
    {
      "type": "wxdgaming.mariadb.winfm.DbLogController",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "about",
          "parameterTypes": [
            "javafx.event.ActionEvent"
          ]
        },
        {
          "name": "bakAction",
          "parameterTypes": [
            "javafx.event.ActionEvent"
          ]
        },
        {
          "name": "clearAction",
          "parameterTypes": [
            "javafx.event.ActionEvent"
          ]
        },
        {
          "name": "clearFile",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "closeAction",
          "parameterTypes": [
            "javafx.event.ActionEvent"
          ]
        },
        {
          "name": "init",
          "parameterTypes": []
        },
        {
          "name": "lambda$clearAction$3",
          "parameterTypes": []
        },
        {
          "name": "lambda$clearFile$4",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "lambda$startAction$1",
          "parameterTypes": []
        },
        {
          "name": "lambda$stopAction$2",
          "parameterTypes": []
        },
        {
          "name": "openConfig",
          "parameterTypes": [
            "javafx.event.ActionEvent"
          ]
        },
        {
          "name": "openLogFile",
          "parameterTypes": [
            "javafx.event.ActionEvent"
          ]
        },
        {
          "name": "sourceAction",
          "parameterTypes": [
            "javafx.event.ActionEvent"
          ]
        },
        {
          "name": "startAction",
          "parameterTypes": [
            "javafx.event.ActionEvent"
          ]
        },
        {
          "name": "stopAction",
          "parameterTypes": [
            "javafx.event.ActionEvent"
          ]
        }
      ]
    },
    {
      "type": "wxdgaming.mariadb.winfm.TextAreaUpdate",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "<init>",
          "parameterTypes": [
            "javafx.scene.web.WebView",
            "int",
            "long",
            "int"
          ]
        },
        {
          "name": "addText",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "lambda$run$0",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "reset",
          "parameterTypes": []
        },
        {
          "name": "run",
          "parameterTypes": []
        }
      ]
    }
  ],
  "jni": [
    {
      "type": "[Lcom.sun.glass.ui.Screen;"
    },
    {
      "type": "[Lsun.java2d.loops.GraphicsPrimitive;"
    },
    {
      "type": "com.sun.glass.ui.Application",
      "methods": [
        {
          "name": "notifyThemeChanged",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "reportException",
          "parameterTypes": [
            "java.lang.Throwable"
          ]
        }
      ]
    },
    {
      "type": "com.sun.glass.ui.Clipboard",
      "fields": [
        {
          "name": "name"
        }
      ],
      "methods": [
        {
          "name": "actionPerformed",
          "parameterTypes": [
            "int"
          ]
        },
        {
          "name": "contentChanged",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.glass.ui.Cursor",
      "methods": [
        {
          "name": "getNativeCursor",
          "parameterTypes": []
        },
        {
          "name": "getType",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.glass.ui.Pixels",
      "methods": [
        {
          "name": "attachData",
          "parameterTypes": [
            "long"
          ]
        }
      ]
    },
    {
      "type": "com.sun.glass.ui.Screen",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "long",
            "int",
            "int",
            "int",
            "int",
            "int",
            "int",
            "int",
            "int",
            "int",
            "int",
            "int",
            "int",
            "int",
            "int",
            "int",
            "float",
            "float",
            "float",
            "float"
          ]
        }
      ]
    },
    {
      "type": "com.sun.glass.ui.Size",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "int",
            "int"
          ]
        }
      ]
    },
    {
      "type": "com.sun.glass.ui.View",
      "fields": [
        {
          "name": "ptr"
        }
      ],
      "methods": [
        {
          "name": "getAccessible",
          "parameterTypes": []
        },
        {
          "name": "getHeight",
          "parameterTypes": []
        },
        {
          "name": "getWidth",
          "parameterTypes": []
        },
        {
          "name": "notifyDragDrop",
          "parameterTypes": [
            "int",
            "int",
            "int",
            "int",
            "int"
          ]
        },
        {
          "name": "notifyDragEnter",
          "parameterTypes": [
            "int",
            "int",
            "int",
            "int",
            "int"
          ]
        },
        {
          "name": "notifyDragLeave",
          "parameterTypes": []
        },
        {
          "name": "notifyDragOver",
          "parameterTypes": [
            "int",
            "int",
            "int",
            "int",
            "int"
          ]
        },
        {
          "name": "notifyInputMethod",
          "parameterTypes": [
            "java.lang.String",
            "int[]",
            "int[]",
            "byte[]",
            "int",
            "int",
            "int"
          ]
        },
        {
          "name": "notifyInputMethodCandidatePosRequest",
          "parameterTypes": [
            "int"
          ]
        },
        {
          "name": "notifyKey",
          "parameterTypes": [
            "int",
            "int",
            "char[]",
            "int"
          ]
        },
        {
          "name": "notifyMenu",
          "parameterTypes": [
            "int",
            "int",
            "int",
            "int",
            "boolean"
          ]
        },
        {
          "name": "notifyMouse",
          "parameterTypes": [
            "int",
            "int",
            "int",
            "int",
            "int",
            "int",
            "int",
            "boolean",
            "boolean"
          ]
        },
        {
          "name": "notifyRepaint",
          "parameterTypes": [
            "int",
            "int",
            "int",
            "int"
          ]
        },
        {
          "name": "notifyScroll",
          "parameterTypes": [
            "int",
            "int",
            "int",
            "int",
            "double",
            "double",
            "int",
            "int",
            "int",
            "int",
            "int",
            "double",
            "double"
          ]
        },
        {
          "name": "notifyView",
          "parameterTypes": [
            "int"
          ]
        }
      ]
    },
    {
      "type": "com.sun.glass.ui.Window",
      "methods": [
        {
          "name": "notifyClose",
          "parameterTypes": []
        },
        {
          "name": "notifyDelegatePtr",
          "parameterTypes": [
            "long"
          ]
        },
        {
          "name": "notifyDestroy",
          "parameterTypes": []
        },
        {
          "name": "notifyFocus",
          "parameterTypes": [
            "int"
          ]
        },
        {
          "name": "notifyFocusDisabled",
          "parameterTypes": []
        },
        {
          "name": "notifyFocusUngrab",
          "parameterTypes": []
        },
        {
          "name": "notifyMove",
          "parameterTypes": [
            "int",
            "int"
          ]
        },
        {
          "name": "notifyMoveToAnotherScreen",
          "parameterTypes": [
            "com.sun.glass.ui.Screen"
          ]
        },
        {
          "name": "notifyScaleChanged",
          "parameterTypes": [
            "float",
            "float",
            "float",
            "float"
          ]
        }
      ]
    },
    {
      "type": "com.sun.glass.ui.win.WinAccessible",
      "methods": [
        {
          "name": "AddToSelection",
          "parameterTypes": []
        },
        {
          "name": "AdviseEventAdded",
          "parameterTypes": [
            "int",
            "long"
          ]
        },
        {
          "name": "AdviseEventRemoved",
          "parameterTypes": [
            "int",
            "long"
          ]
        },
        {
          "name": "Collapse",
          "parameterTypes": []
        },
        {
          "name": "ElementProviderFromPoint",
          "parameterTypes": [
            "double",
            "double"
          ]
        },
        {
          "name": "Expand",
          "parameterTypes": []
        },
        {
          "name": "GetColumnHeaderItems",
          "parameterTypes": []
        },
        {
          "name": "GetColumnHeaders",
          "parameterTypes": []
        },
        {
          "name": "GetEmbeddedFragmentRoots",
          "parameterTypes": []
        },
        {
          "name": "GetFocus",
          "parameterTypes": []
        },
        {
          "name": "GetItem",
          "parameterTypes": [
            "int",
            "int"
          ]
        },
        {
          "name": "GetPatternProvider",
          "parameterTypes": [
            "int"
          ]
        },
        {
          "name": "GetPropertyValue",
          "parameterTypes": [
            "int"
          ]
        },
        {
          "name": "GetRowHeaderItems",
          "parameterTypes": []
        },
        {
          "name": "GetRowHeaders",
          "parameterTypes": []
        },
        {
          "name": "GetRuntimeId",
          "parameterTypes": []
        },
        {
          "name": "GetSelection",
          "parameterTypes": []
        },
        {
          "name": "GetVisibleRanges",
          "parameterTypes": []
        },
        {
          "name": "Invoke",
          "parameterTypes": []
        },
        {
          "name": "Move",
          "parameterTypes": [
            "double",
            "double"
          ]
        },
        {
          "name": "Navigate",
          "parameterTypes": [
            "int"
          ]
        },
        {
          "name": "RangeFromChild",
          "parameterTypes": [
            "long"
          ]
        },
        {
          "name": "RangeFromPoint",
          "parameterTypes": [
            "double",
            "double"
          ]
        },
        {
          "name": "RemoveFromSelection",
          "parameterTypes": []
        },
        {
          "name": "Resize",
          "parameterTypes": [
            "double",
            "double"
          ]
        },
        {
          "name": "Rotate",
          "parameterTypes": [
            "double"
          ]
        },
        {
          "name": "Scroll",
          "parameterTypes": [
            "int",
            "int"
          ]
        },
        {
          "name": "ScrollIntoView",
          "parameterTypes": []
        },
        {
          "name": "Select",
          "parameterTypes": []
        },
        {
          "name": "SetFocus",
          "parameterTypes": []
        },
        {
          "name": "SetScrollPercent",
          "parameterTypes": [
            "double",
            "double"
          ]
        },
        {
          "name": "SetValue",
          "parameterTypes": [
            "double"
          ]
        },
        {
          "name": "SetValueString",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "Toggle",
          "parameterTypes": []
        },
        {
          "name": "get_BoundingRectangle",
          "parameterTypes": []
        },
        {
          "name": "get_CanMove",
          "parameterTypes": []
        },
        {
          "name": "get_CanResize",
          "parameterTypes": []
        },
        {
          "name": "get_CanRotate",
          "parameterTypes": []
        },
        {
          "name": "get_CanSelectMultiple",
          "parameterTypes": []
        },
        {
          "name": "get_Column",
          "parameterTypes": []
        },
        {
          "name": "get_ColumnCount",
          "parameterTypes": []
        },
        {
          "name": "get_ColumnSpan",
          "parameterTypes": []
        },
        {
          "name": "get_ContainingGrid",
          "parameterTypes": []
        },
        {
          "name": "get_DocumentRange",
          "parameterTypes": []
        },
        {
          "name": "get_ExpandCollapseState",
          "parameterTypes": []
        },
        {
          "name": "get_FragmentRoot",
          "parameterTypes": []
        },
        {
          "name": "get_HorizontalScrollPercent",
          "parameterTypes": []
        },
        {
          "name": "get_HorizontalViewSize",
          "parameterTypes": []
        },
        {
          "name": "get_HorizontallyScrollable",
          "parameterTypes": []
        },
        {
          "name": "get_HostRawElementProvider",
          "parameterTypes": []
        },
        {
          "name": "get_IsReadOnly",
          "parameterTypes": []
        },
        {
          "name": "get_IsSelected",
          "parameterTypes": []
        },
        {
          "name": "get_IsSelectionRequired",
          "parameterTypes": []
        },
        {
          "name": "get_LargeChange",
          "parameterTypes": []
        },
        {
          "name": "get_Maximum",
          "parameterTypes": []
        },
        {
          "name": "get_Minimum",
          "parameterTypes": []
        },
        {
          "name": "get_Row",
          "parameterTypes": []
        },
        {
          "name": "get_RowCount",
          "parameterTypes": []
        },
        {
          "name": "get_RowOrColumnMajor",
          "parameterTypes": []
        },
        {
          "name": "get_RowSpan",
          "parameterTypes": []
        },
        {
          "name": "get_SelectionContainer",
          "parameterTypes": []
        },
        {
          "name": "get_SmallChange",
          "parameterTypes": []
        },
        {
          "name": "get_SupportedTextSelection",
          "parameterTypes": []
        },
        {
          "name": "get_ToggleState",
          "parameterTypes": []
        },
        {
          "name": "get_Value",
          "parameterTypes": []
        },
        {
          "name": "get_ValueString",
          "parameterTypes": []
        },
        {
          "name": "get_VerticalScrollPercent",
          "parameterTypes": []
        },
        {
          "name": "get_VerticalViewSize",
          "parameterTypes": []
        },
        {
          "name": "get_VerticallyScrollable",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.glass.ui.win.WinApplication"
    },
    {
      "type": "com.sun.glass.ui.win.WinDnDClipboard",
      "methods": [
        {
          "name": "getInstance",
          "parameterTypes": []
        },
        {
          "name": "setDragButton",
          "parameterTypes": [
            "int"
          ]
        }
      ]
    },
    {
      "type": "com.sun.glass.ui.win.WinGestureSupport",
      "methods": [
        {
          "name": "gesturePerformed",
          "parameterTypes": [
            "com.sun.glass.ui.View",
            "int",
            "boolean",
            "boolean",
            "int",
            "int",
            "int",
            "int",
            "float",
            "float",
            "float",
            "float",
            "float",
            "float",
            "float"
          ]
        },
        {
          "name": "inertiaGestureFinished",
          "parameterTypes": [
            "com.sun.glass.ui.View"
          ]
        },
        {
          "name": "notifyBeginTouchEvent",
          "parameterTypes": [
            "com.sun.glass.ui.View",
            "int",
            "boolean",
            "int"
          ]
        },
        {
          "name": "notifyEndTouchEvent",
          "parameterTypes": [
            "com.sun.glass.ui.View"
          ]
        },
        {
          "name": "notifyNextTouchEvent",
          "parameterTypes": [
            "com.sun.glass.ui.View",
            "int",
            "long",
            "int",
            "int",
            "int",
            "int"
          ]
        }
      ]
    },
    {
      "type": "com.sun.glass.ui.win.WinPixels"
    },
    {
      "type": "com.sun.glass.ui.win.WinSystemClipboard",
      "fields": [
        {
          "name": "ptr"
        }
      ],
      "methods": [
        {
          "name": "fosSerialize",
          "parameterTypes": [
            "java.lang.String",
            "long"
          ]
        }
      ]
    },
    {
      "type": "com.sun.glass.ui.win.WinVariant",
      "fields": [
        {
          "name": "boolVal"
        },
        {
          "name": "bstrVal"
        },
        {
          "name": "dblVal"
        },
        {
          "name": "fltVal"
        },
        {
          "name": "iVal"
        },
        {
          "name": "lVal"
        },
        {
          "name": "pDblVal"
        },
        {
          "name": "punkVal"
        },
        {
          "name": "vt"
        }
      ]
    },
    {
      "type": "com.sun.glass.ui.win.WinView",
      "methods": [
        {
          "name": "notifyResize",
          "parameterTypes": [
            "int",
            "int"
          ]
        }
      ]
    },
    {
      "type": "com.sun.glass.ui.win.WinWindow",
      "methods": [
        {
          "name": "notifyMoving",
          "parameterTypes": [
            "int",
            "int",
            "int",
            "int",
            "float",
            "float",
            "int",
            "int",
            "int",
            "int",
            "int",
            "int",
            "int"
          ]
        },
        {
          "name": "notifyResize",
          "parameterTypes": [
            "int",
            "int",
            "int"
          ]
        }
      ]
    },
    {
      "type": "com.sun.javafx.font.directwrite.D2D1_COLOR_F",
      "fields": [
        {
          "name": "a"
        },
        {
          "name": "b"
        },
        {
          "name": "g"
        },
        {
          "name": "r"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.javafx.font.directwrite.D2D1_MATRIX_3X2_F",
      "fields": [
        {
          "name": "_11"
        },
        {
          "name": "_12"
        },
        {
          "name": "_21"
        },
        {
          "name": "_22"
        },
        {
          "name": "_31"
        },
        {
          "name": "_32"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.javafx.font.directwrite.D2D1_PIXEL_FORMAT",
      "fields": [
        {
          "name": "alphaMode"
        },
        {
          "name": "format"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.javafx.font.directwrite.D2D1_POINT_2F",
      "fields": [
        {
          "name": "x"
        },
        {
          "name": "y"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.javafx.font.directwrite.D2D1_RENDER_TARGET_PROPERTIES",
      "fields": [
        {
          "name": "dpiX"
        },
        {
          "name": "dpiY"
        },
        {
          "name": "minLevel"
        },
        {
          "name": "pixelFormat"
        },
        {
          "name": "type"
        },
        {
          "name": "usage"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.javafx.font.directwrite.DWRITE_GLYPH_METRICS",
      "fields": [
        {
          "name": "advanceHeight"
        },
        {
          "name": "advanceWidth"
        },
        {
          "name": "bottomSideBearing"
        },
        {
          "name": "leftSideBearing"
        },
        {
          "name": "rightSideBearing"
        },
        {
          "name": "topSideBearing"
        },
        {
          "name": "verticalOriginY"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.javafx.font.directwrite.DWRITE_GLYPH_RUN",
      "fields": [
        {
          "name": "advanceOffset"
        },
        {
          "name": "ascenderOffset"
        },
        {
          "name": "bidiLevel"
        },
        {
          "name": "fontEmSize"
        },
        {
          "name": "fontFace"
        },
        {
          "name": "glyphAdvances"
        },
        {
          "name": "glyphIndices"
        },
        {
          "name": "isSideways"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.javafx.font.directwrite.RECT",
      "fields": [
        {
          "name": "bottom"
        },
        {
          "name": "left"
        },
        {
          "name": "right"
        },
        {
          "name": "top"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.prism.impl.PrismSettings",
      "fields": [
        {
          "name": "disableD3D9Ex"
        },
        {
          "name": "forceGPU"
        },
        {
          "name": "isVsyncEnabled"
        },
        {
          "name": "verbose"
        }
      ]
    },
    {
      "type": "com.sun.webkit.CursorManager",
      "methods": [
        {
          "name": "getCursorManager",
          "parameterTypes": []
        },
        {
          "name": "getPredefinedCursorID",
          "parameterTypes": [
            "int"
          ]
        }
      ]
    },
    {
      "type": "com.sun.webkit.FileSystem"
    },
    {
      "type": "com.sun.webkit.MainThread",
      "methods": [
        {
          "name": "fwkScheduleDispatchFunctions",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.webkit.Timer",
      "methods": [
        {
          "name": "fwkSetFireTime",
          "parameterTypes": [
            "double"
          ]
        },
        {
          "name": "fwkStopTimer",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.webkit.WCWidget",
      "methods": [
        {
          "name": "fwkDestroy",
          "parameterTypes": []
        },
        {
          "name": "fwkRequestFocus",
          "parameterTypes": []
        },
        {
          "name": "fwkSetBounds",
          "parameterTypes": [
            "int",
            "int",
            "int",
            "int"
          ]
        },
        {
          "name": "fwkSetCursor",
          "parameterTypes": [
            "long"
          ]
        },
        {
          "name": "fwkSetVisible",
          "parameterTypes": [
            "boolean"
          ]
        }
      ]
    },
    {
      "type": "com.sun.webkit.WebPage",
      "methods": [
        {
          "name": "fwkAddMessageToConsole",
          "parameterTypes": [
            "java.lang.String",
            "int",
            "java.lang.String"
          ]
        },
        {
          "name": "fwkAlert",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "fwkCanRunBeforeUnloadConfirmPanel",
          "parameterTypes": []
        },
        {
          "name": "fwkChooseFile",
          "parameterTypes": [
            "java.lang.String",
            "boolean",
            "java.lang.String"
          ]
        },
        {
          "name": "fwkCloseWindow",
          "parameterTypes": []
        },
        {
          "name": "fwkConfirm",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "fwkCreateWindow",
          "parameterTypes": [
            "boolean",
            "boolean",
            "boolean",
            "boolean"
          ]
        },
        {
          "name": "fwkDidClearWindowObject",
          "parameterTypes": [
            "long",
            "long"
          ]
        },
        {
          "name": "fwkFireLoadEvent",
          "parameterTypes": [
            "long",
            "int",
            "java.lang.String",
            "java.lang.String",
            "double",
            "int"
          ]
        },
        {
          "name": "fwkFireResourceLoadEvent",
          "parameterTypes": [
            "long",
            "int",
            "int",
            "java.lang.String",
            "double",
            "int"
          ]
        },
        {
          "name": "fwkFrameCreated",
          "parameterTypes": [
            "long"
          ]
        },
        {
          "name": "fwkFrameDestroyed",
          "parameterTypes": [
            "long"
          ]
        },
        {
          "name": "fwkGetPageBounds",
          "parameterTypes": []
        },
        {
          "name": "fwkGetWindowBounds",
          "parameterTypes": []
        },
        {
          "name": "fwkPermitAcceptResourceAction",
          "parameterTypes": [
            "long",
            "java.lang.String"
          ]
        },
        {
          "name": "fwkPermitEnableScriptsAction",
          "parameterTypes": [
            "long",
            "java.lang.String"
          ]
        },
        {
          "name": "fwkPermitNavigateAction",
          "parameterTypes": [
            "long",
            "java.lang.String"
          ]
        },
        {
          "name": "fwkPermitNewWindowAction",
          "parameterTypes": [
            "long",
            "java.lang.String"
          ]
        },
        {
          "name": "fwkPermitRedirectAction",
          "parameterTypes": [
            "long",
            "java.lang.String"
          ]
        },
        {
          "name": "fwkPermitSubmitDataAction",
          "parameterTypes": [
            "long",
            "java.lang.String",
            "java.lang.String",
            "boolean"
          ]
        },
        {
          "name": "fwkPrompt",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.String"
          ]
        },
        {
          "name": "fwkRemoveRequestURL",
          "parameterTypes": [
            "long",
            "int"
          ]
        },
        {
          "name": "fwkRepaint",
          "parameterTypes": [
            "int",
            "int",
            "int",
            "int"
          ]
        },
        {
          "name": "fwkRunBeforeUnloadConfirmPanel",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "fwkScreenToWindow",
          "parameterTypes": [
            "com.sun.webkit.graphics.WCPoint"
          ]
        },
        {
          "name": "fwkSetCursor",
          "parameterTypes": [
            "long"
          ]
        },
        {
          "name": "fwkSetFocus",
          "parameterTypes": [
            "boolean"
          ]
        },
        {
          "name": "fwkSetRequestURL",
          "parameterTypes": [
            "long",
            "int",
            "java.lang.String"
          ]
        },
        {
          "name": "fwkSetScrollbarsVisible",
          "parameterTypes": [
            "boolean"
          ]
        },
        {
          "name": "fwkSetStatusbarText",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "fwkSetTooltip",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "fwkSetWindowBounds",
          "parameterTypes": [
            "int",
            "int",
            "int",
            "int"
          ]
        },
        {
          "name": "fwkShowWindow",
          "parameterTypes": []
        },
        {
          "name": "fwkTransferFocus",
          "parameterTypes": [
            "boolean"
          ]
        },
        {
          "name": "fwkWindowToScreen",
          "parameterTypes": [
            "com.sun.webkit.graphics.WCPoint"
          ]
        },
        {
          "name": "getHostWindow",
          "parameterTypes": []
        },
        {
          "name": "getPage",
          "parameterTypes": []
        },
        {
          "name": "getRenderTheme",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.webkit.dom.JSObject",
      "fields": [
        {
          "name": "UNDEFINED"
        }
      ]
    },
    {
      "type": "com.sun.webkit.graphics.Ref",
      "methods": [
        {
          "name": "getID",
          "parameterTypes": []
        },
        {
          "name": "ref",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.webkit.graphics.ScrollBarTheme",
      "methods": [
        {
          "name": "getThickness",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.webkit.graphics.WCFont",
      "methods": [
        {
          "name": "equals",
          "parameterTypes": [
            "java.lang.Object"
          ]
        },
        {
          "name": "getAscent",
          "parameterTypes": []
        },
        {
          "name": "getCapHeight",
          "parameterTypes": []
        },
        {
          "name": "getDescent",
          "parameterTypes": []
        },
        {
          "name": "getGlyphCodes",
          "parameterTypes": [
            "char[]"
          ]
        },
        {
          "name": "getGlyphWidth",
          "parameterTypes": [
            "int"
          ]
        },
        {
          "name": "getLineGap",
          "parameterTypes": []
        },
        {
          "name": "getLineSpacing",
          "parameterTypes": []
        },
        {
          "name": "getXHeight",
          "parameterTypes": []
        },
        {
          "name": "hasUniformLineMetrics",
          "parameterTypes": []
        },
        {
          "name": "hashCode",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.webkit.graphics.WCGraphicsManager",
      "methods": [
        {
          "name": "createWCPath",
          "parameterTypes": []
        },
        {
          "name": "getGraphicsManager",
          "parameterTypes": []
        },
        {
          "name": "getWCFont",
          "parameterTypes": [
            "java.lang.String",
            "boolean",
            "boolean",
            "float"
          ]
        }
      ]
    },
    {
      "type": "com.sun.webkit.graphics.WCPoint",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "float",
            "float"
          ]
        },
        {
          "name": "getX",
          "parameterTypes": []
        },
        {
          "name": "getY",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.webkit.graphics.WCRectangle",
      "fields": [
        {
          "name": "h"
        },
        {
          "name": "w"
        },
        {
          "name": "x"
        },
        {
          "name": "y"
        }
      ]
    },
    {
      "type": "com.sun.webkit.graphics.WCRenderQueue",
      "methods": [
        {
          "name": "fwkAddBuffer",
          "parameterTypes": [
            "java.nio.ByteBuffer"
          ]
        },
        {
          "name": "fwkDisposeGraphics",
          "parameterTypes": []
        },
        {
          "name": "refFloatArr",
          "parameterTypes": [
            "float[]"
          ]
        },
        {
          "name": "refIntArr",
          "parameterTypes": [
            "int[]"
          ]
        }
      ]
    },
    {
      "type": "com.sun.webkit.network.FormDataElement",
      "methods": [
        {
          "name": "fwkCreateFromByteArray",
          "parameterTypes": [
            "byte[]"
          ]
        },
        {
          "name": "fwkCreateFromFile",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "com.sun.webkit.network.NetworkContext",
      "methods": [
        {
          "name": "canHandleURL",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "fwkGetMaximumHTTPConnectionCountPerHost",
          "parameterTypes": []
        },
        {
          "name": "fwkLoad",
          "parameterTypes": [
            "com.sun.webkit.WebPage",
            "boolean",
            "java.lang.String",
            "java.lang.String",
            "java.lang.String",
            "com.sun.webkit.network.FormDataElement[]",
            "long"
          ]
        }
      ]
    },
    {
      "type": "com.sun.webkit.network.URLLoaderBase",
      "methods": [
        {
          "name": "fwkCancel",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.awt.AWTEvent",
      "fields": [
        {
          "name": "bdata"
        },
        {
          "name": "consumed"
        },
        {
          "name": "id"
        }
      ]
    },
    {
      "type": "java.awt.AlphaComposite",
      "fields": [
        {
          "name": "extraAlpha"
        },
        {
          "name": "rule"
        }
      ]
    },
    {
      "type": "java.awt.Color",
      "methods": [
        {
          "name": "getRGB",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.awt.Component",
      "fields": [
        {
          "name": "appContext"
        },
        {
          "name": "background"
        },
        {
          "name": "cursor"
        },
        {
          "name": "enabled"
        },
        {
          "name": "focusable"
        },
        {
          "name": "foreground"
        },
        {
          "name": "graphicsConfig"
        },
        {
          "name": "height"
        },
        {
          "name": "parent"
        },
        {
          "name": "peer"
        },
        {
          "name": "visible"
        },
        {
          "name": "width"
        },
        {
          "name": "x"
        },
        {
          "name": "y"
        }
      ],
      "methods": [
        {
          "name": "getFont_NoClientCode",
          "parameterTypes": []
        },
        {
          "name": "getLocationOnScreen_NoTreeLock",
          "parameterTypes": []
        },
        {
          "name": "getToolkitImpl",
          "parameterTypes": []
        },
        {
          "name": "isEnabledImpl",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.awt.Container",
      "fields": [
        {
          "name": "layoutMgr"
        }
      ]
    },
    {
      "type": "java.awt.Cursor",
      "fields": [
        {
          "name": "pData"
        },
        {
          "name": "type"
        }
      ],
      "methods": [
        {
          "name": "setPData",
          "parameterTypes": [
            "long"
          ]
        }
      ]
    },
    {
      "type": "java.awt.Font",
      "fields": [
        {
          "name": "name"
        },
        {
          "name": "pData"
        },
        {
          "name": "size"
        },
        {
          "name": "style"
        }
      ],
      "methods": [
        {
          "name": "getFont",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "getFontPeer",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.awt.Frame",
      "fields": [
        {
          "name": "undecorated"
        }
      ]
    },
    {
      "type": "java.awt.Insets",
      "fields": [
        {
          "name": "bottom"
        },
        {
          "name": "left"
        },
        {
          "name": "right"
        },
        {
          "name": "top"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "int",
            "int",
            "int",
            "int"
          ]
        }
      ]
    },
    {
      "type": "java.awt.Point",
      "fields": [
        {
          "name": "x"
        },
        {
          "name": "y"
        }
      ]
    },
    {
      "type": "java.awt.Rectangle",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "int",
            "int",
            "int",
            "int"
          ]
        }
      ]
    },
    {
      "type": "java.awt.Toolkit",
      "methods": [
        {
          "name": "getDefaultToolkit",
          "parameterTypes": []
        },
        {
          "name": "getFontMetrics",
          "parameterTypes": [
            "java.awt.Font"
          ]
        }
      ]
    },
    {
      "type": "java.awt.TrayIcon",
      "fields": [
        {
          "name": "actionCommand"
        },
        {
          "name": "id"
        }
      ]
    },
    {
      "type": "java.awt.Window",
      "fields": [
        {
          "name": "autoRequestFocus"
        },
        {
          "name": "locationByPlatform"
        },
        {
          "name": "securityWarningHeight"
        },
        {
          "name": "securityWarningWidth"
        },
        {
          "name": "warningString"
        }
      ],
      "methods": [
        {
          "name": "calculateSecurityWarningPosition",
          "parameterTypes": [
            "double",
            "double",
            "double",
            "double"
          ]
        },
        {
          "name": "getWarningString",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.awt.Window$Type"
    },
    {
      "type": "java.awt.desktop.UserSessionEvent$Reason",
      "fields": [
        {
          "name": "CONSOLE"
        },
        {
          "name": "LOCK"
        },
        {
          "name": "REMOTE"
        },
        {
          "name": "UNSPECIFIED"
        }
      ]
    },
    {
      "type": "java.awt.event.ActionEvent",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Object",
            "int",
            "java.lang.String",
            "long",
            "int"
          ]
        }
      ]
    },
    {
      "type": "java.awt.event.ComponentEvent",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.awt.Component",
            "int"
          ]
        }
      ]
    },
    {
      "type": "java.awt.event.InputEvent",
      "fields": [
        {
          "name": "modifiers"
        }
      ],
      "methods": [
        {
          "name": "getButtonDownMasks",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.awt.event.MouseEvent",
      "fields": [
        {
          "name": "button"
        },
        {
          "name": "causedByTouchEvent"
        },
        {
          "name": "x"
        },
        {
          "name": "y"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.awt.Component",
            "int",
            "long",
            "int",
            "int",
            "int",
            "int",
            "int",
            "int",
            "boolean",
            "int"
          ]
        }
      ]
    },
    {
      "type": "java.awt.geom.AffineTransform",
      "fields": [
        {
          "name": "m00"
        },
        {
          "name": "m01"
        },
        {
          "name": "m02"
        },
        {
          "name": "m10"
        },
        {
          "name": "m11"
        },
        {
          "name": "m12"
        }
      ]
    },
    {
      "type": "java.awt.geom.GeneralPath",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "<init>",
          "parameterTypes": [
            "int",
            "byte[]",
            "int",
            "float[]",
            "int"
          ]
        }
      ]
    },
    {
      "type": "java.awt.geom.Path2D",
      "fields": [
        {
          "name": "numTypes"
        },
        {
          "name": "pointTypes"
        },
        {
          "name": "windingRule"
        }
      ]
    },
    {
      "type": "java.awt.geom.Path2D$Float",
      "fields": [
        {
          "name": "floatCoords"
        }
      ]
    },
    {
      "type": "java.awt.geom.Point2D$Float",
      "fields": [
        {
          "name": "x"
        },
        {
          "name": "y"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "float",
            "float"
          ]
        }
      ]
    },
    {
      "type": "java.awt.geom.Rectangle2D$Float",
      "fields": [
        {
          "name": "height"
        },
        {
          "name": "width"
        },
        {
          "name": "x"
        },
        {
          "name": "y"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "<init>",
          "parameterTypes": [
            "float",
            "float",
            "float",
            "float"
          ]
        }
      ]
    },
    {
      "type": "java.awt.image.BufferedImage",
      "fields": [
        {
          "name": "colorModel"
        },
        {
          "name": "imageType"
        },
        {
          "name": "raster"
        }
      ],
      "methods": [
        {
          "name": "getRGB",
          "parameterTypes": [
            "int",
            "int",
            "int",
            "int",
            "int[]",
            "int",
            "int"
          ]
        },
        {
          "name": "setRGB",
          "parameterTypes": [
            "int",
            "int",
            "int",
            "int",
            "int[]",
            "int",
            "int"
          ]
        }
      ]
    },
    {
      "type": "java.awt.image.ColorModel",
      "fields": [
        {
          "name": "colorSpace"
        },
        {
          "name": "colorSpaceType"
        },
        {
          "name": "isAlphaPremultiplied"
        },
        {
          "name": "is_sRGB"
        },
        {
          "name": "nBits"
        },
        {
          "name": "numComponents"
        },
        {
          "name": "supportsAlpha"
        },
        {
          "name": "transparency"
        }
      ],
      "methods": [
        {
          "name": "getRGBdefault",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.awt.image.DirectColorModel",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "int",
            "int",
            "int",
            "int"
          ]
        }
      ]
    },
    {
      "type": "java.awt.image.IndexColorModel",
      "fields": [
        {
          "name": "allgrayopaque"
        },
        {
          "name": "colorData"
        },
        {
          "name": "lookupcache"
        },
        {
          "name": "map_size"
        },
        {
          "name": "rgb"
        },
        {
          "name": "transparent_index"
        }
      ]
    },
    {
      "type": "java.awt.image.Raster",
      "fields": [
        {
          "name": "dataBuffer"
        },
        {
          "name": "height"
        },
        {
          "name": "minX"
        },
        {
          "name": "minY"
        },
        {
          "name": "numBands"
        },
        {
          "name": "numDataElements"
        },
        {
          "name": "sampleModel"
        },
        {
          "name": "sampleModelTranslateX"
        },
        {
          "name": "sampleModelTranslateY"
        },
        {
          "name": "width"
        }
      ]
    },
    {
      "type": "java.awt.image.SampleModel",
      "fields": [
        {
          "name": "height"
        },
        {
          "name": "width"
        }
      ],
      "methods": [
        {
          "name": "getPixels",
          "parameterTypes": [
            "int",
            "int",
            "int",
            "int",
            "int[]",
            "java.awt.image.DataBuffer"
          ]
        },
        {
          "name": "setPixels",
          "parameterTypes": [
            "int",
            "int",
            "int",
            "int",
            "int[]",
            "java.awt.image.DataBuffer"
          ]
        }
      ]
    },
    {
      "type": "java.awt.image.SinglePixelPackedSampleModel",
      "fields": [
        {
          "name": "bitMasks"
        },
        {
          "name": "bitOffsets"
        },
        {
          "name": "bitSizes"
        },
        {
          "name": "maxBitSize"
        }
      ]
    },
    {
      "type": "java.lang.Boolean",
      "methods": [
        {
          "name": "getBoolean",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "java.lang.Class",
      "methods": [
        {
          "name": "forName",
          "parameterTypes": [
            "java.lang.String",
            "boolean",
            "java.lang.ClassLoader"
          ]
        }
      ]
    },
    {
      "type": "java.lang.Enum",
      "methods": [
        {
          "name": "name",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.Runnable",
      "methods": [
        {
          "name": "run",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.String",
      "methods": [
        {
          "name": "toLowerCase",
          "parameterTypes": [
            "java.util.Locale"
          ]
        }
      ]
    },
    {
      "type": "java.lang.Thread",
      "methods": [
        {
          "name": "currentThread",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.util.ArrayList",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "int"
          ]
        },
        {
          "name": "add",
          "parameterTypes": [
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "java.util.HashMap",
      "methods": [
        {
          "name": "containsKey",
          "parameterTypes": [
            "java.lang.Object"
          ]
        },
        {
          "name": "put",
          "parameterTypes": [
            "java.lang.Object",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.awt.AWTAutoShutdown",
      "methods": [
        {
          "name": "notifyToolkitThreadBusy",
          "parameterTypes": []
        },
        {
          "name": "notifyToolkitThreadFree",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.awt.EmbeddedFrame"
    },
    {
      "type": "sun.awt.ExtendedKeyCodes",
      "methods": [
        {
          "name": "getExtendedKeyCodeForChar",
          "parameterTypes": [
            "int"
          ]
        }
      ]
    },
    {
      "type": "sun.awt.FontDescriptor",
      "fields": [
        {
          "name": "nativeName"
        },
        {
          "name": "useUnicode"
        }
      ]
    },
    {
      "type": "sun.awt.LightweightFrame"
    },
    {
      "type": "sun.awt.PlatformFont",
      "fields": [
        {
          "name": "componentFonts"
        },
        {
          "name": "fontConfig"
        }
      ],
      "methods": [
        {
          "name": "makeConvertedMultiFontString",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "sun.awt.SunHints",
      "fields": [
        {
          "name": "INTVAL_STROKE_PURE"
        }
      ]
    },
    {
      "type": "sun.awt.SunToolkit",
      "methods": [
        {
          "name": "isTouchKeyboardAutoShowEnabled",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.awt.Win32GraphicsConfig",
      "fields": [
        {
          "name": "visual"
        }
      ]
    },
    {
      "type": "sun.awt.Win32GraphicsDevice",
      "fields": [
        {
          "name": "dynamicColorModel"
        }
      ]
    },
    {
      "type": "sun.awt.Win32GraphicsEnvironment",
      "methods": [
        {
          "name": "dwmCompositionChanged",
          "parameterTypes": [
            "boolean"
          ]
        }
      ]
    },
    {
      "type": "sun.awt.im.InputMethodWindow"
    },
    {
      "type": "sun.awt.image.BufImgSurfaceData$ICMColorData",
      "fields": [
        {
          "name": "pData"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "long"
          ]
        }
      ]
    },
    {
      "type": "sun.awt.image.ByteComponentRaster",
      "fields": [
        {
          "name": "data"
        },
        {
          "name": "dataOffsets"
        },
        {
          "name": "pixelStride"
        },
        {
          "name": "scanlineStride"
        },
        {
          "name": "type"
        }
      ]
    },
    {
      "type": "sun.awt.image.IntegerComponentRaster",
      "fields": [
        {
          "name": "data"
        },
        {
          "name": "dataOffsets"
        },
        {
          "name": "pixelStride"
        },
        {
          "name": "scanlineStride"
        },
        {
          "name": "type"
        }
      ]
    },
    {
      "type": "sun.awt.image.SunVolatileImage",
      "fields": [
        {
          "name": "volSurfaceManager"
        }
      ]
    },
    {
      "type": "sun.awt.image.VolatileSurfaceManager",
      "fields": [
        {
          "name": "sdCurrent"
        }
      ]
    },
    {
      "type": "sun.awt.windows.WComponentPeer",
      "fields": [
        {
          "name": "hwnd"
        },
        {
          "name": "winGraphicsConfig"
        }
      ],
      "methods": [
        {
          "name": "disposeLater",
          "parameterTypes": []
        },
        {
          "name": "postEvent",
          "parameterTypes": [
            "java.awt.AWTEvent"
          ]
        },
        {
          "name": "replaceSurfaceData",
          "parameterTypes": []
        },
        {
          "name": "replaceSurfaceDataLater",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.awt.windows.WDesktopPeer",
      "methods": [
        {
          "name": "systemSleepCallback",
          "parameterTypes": [
            "boolean"
          ]
        },
        {
          "name": "userSessionCallback",
          "parameterTypes": [
            "boolean",
            "java.awt.desktop.UserSessionEvent$Reason"
          ]
        }
      ]
    },
    {
      "type": "sun.awt.windows.WFontPeer",
      "fields": [
        {
          "name": "textComponentFontName"
        }
      ]
    },
    {
      "type": "sun.awt.windows.WFramePeer",
      "methods": [
        {
          "name": "getExtendedState",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.awt.windows.WObjectPeer",
      "fields": [
        {
          "name": "createError"
        },
        {
          "name": "destroyed"
        },
        {
          "name": "pData"
        },
        {
          "name": "target"
        }
      ],
      "methods": [
        {
          "name": "getPeerForTarget",
          "parameterTypes": [
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.awt.windows.WPanelPeer",
      "fields": [
        {
          "name": "insets_"
        }
      ]
    },
    {
      "type": "sun.awt.windows.WToolkit",
      "methods": [
        {
          "name": "displayChanged",
          "parameterTypes": []
        },
        {
          "name": "paletteChanged",
          "parameterTypes": []
        },
        {
          "name": "windowsSettingChange",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.awt.windows.WTrayIconPeer",
      "methods": [
        {
          "name": "postEvent",
          "parameterTypes": [
            "java.awt.AWTEvent"
          ]
        },
        {
          "name": "updateImage",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.awt.windows.WWindowPeer",
      "fields": [
        {
          "name": "windowType"
        }
      ],
      "methods": [
        {
          "name": "draggedToNewScreen",
          "parameterTypes": []
        },
        {
          "name": "notifyWindowStateChanged",
          "parameterTypes": [
            "int",
            "int"
          ]
        }
      ]
    },
    {
      "type": "sun.font.CharToGlyphMapper",
      "methods": [
        {
          "name": "charToGlyph",
          "parameterTypes": [
            "int"
          ]
        }
      ]
    },
    {
      "type": "sun.font.Font2D",
      "methods": [
        {
          "name": "canDisplay",
          "parameterTypes": [
            "char"
          ]
        },
        {
          "name": "charToGlyph",
          "parameterTypes": [
            "int"
          ]
        },
        {
          "name": "charToVariationGlyph",
          "parameterTypes": [
            "int",
            "int"
          ]
        },
        {
          "name": "getMapper",
          "parameterTypes": []
        },
        {
          "name": "getTableBytes",
          "parameterTypes": [
            "int"
          ]
        }
      ]
    },
    {
      "type": "sun.font.FontStrike",
      "methods": [
        {
          "name": "getGlyphMetrics",
          "parameterTypes": [
            "int"
          ]
        }
      ]
    },
    {
      "type": "sun.font.GlyphList",
      "fields": [
        {
          "name": "gposx"
        },
        {
          "name": "gposy"
        },
        {
          "name": "images"
        },
        {
          "name": "lcdRGBOrder"
        },
        {
          "name": "lcdSubPixPos"
        },
        {
          "name": "len"
        },
        {
          "name": "positions"
        },
        {
          "name": "usePositions"
        }
      ]
    },
    {
      "type": "sun.font.PhysicalStrike",
      "fields": [
        {
          "name": "pScalerContext"
        }
      ],
      "methods": [
        {
          "name": "adjustPoint",
          "parameterTypes": [
            "java.awt.geom.Point2D$Float"
          ]
        },
        {
          "name": "getGlyphPoint",
          "parameterTypes": [
            "int",
            "int"
          ]
        }
      ]
    },
    {
      "type": "sun.font.StrikeMetrics",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "float",
            "float",
            "float",
            "float",
            "float",
            "float",
            "float",
            "float",
            "float",
            "float"
          ]
        }
      ]
    },
    {
      "type": "sun.font.TrueTypeFont",
      "methods": [
        {
          "name": "readBlock",
          "parameterTypes": [
            "java.nio.ByteBuffer",
            "int",
            "int"
          ]
        },
        {
          "name": "readBytes",
          "parameterTypes": [
            "int",
            "int"
          ]
        }
      ]
    },
    {
      "type": "sun.font.Type1Font",
      "methods": [
        {
          "name": "readFile",
          "parameterTypes": [
            "java.nio.ByteBuffer"
          ]
        }
      ]
    },
    {
      "type": "sun.java2d.Disposer",
      "methods": [
        {
          "name": "addRecord",
          "parameterTypes": [
            "java.lang.Object",
            "long",
            "long"
          ]
        }
      ]
    },
    {
      "type": "sun.java2d.InvalidPipeException"
    },
    {
      "type": "sun.java2d.NullSurfaceData"
    },
    {
      "type": "sun.java2d.SunGraphics2D",
      "fields": [
        {
          "name": "clipRegion"
        },
        {
          "name": "composite"
        },
        {
          "name": "eargb"
        },
        {
          "name": "lcdTextContrast"
        },
        {
          "name": "pixel"
        },
        {
          "name": "strokeHint"
        }
      ]
    },
    {
      "type": "sun.java2d.SurfaceData",
      "fields": [
        {
          "name": "pData"
        },
        {
          "name": "valid"
        }
      ]
    },
    {
      "type": "sun.java2d.loops.Blit",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "long",
            "sun.java2d.loops.SurfaceType",
            "sun.java2d.loops.CompositeType",
            "sun.java2d.loops.SurfaceType"
          ]
        }
      ]
    },
    {
      "type": "sun.java2d.loops.BlitBg",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "long",
            "sun.java2d.loops.SurfaceType",
            "sun.java2d.loops.CompositeType",
            "sun.java2d.loops.SurfaceType"
          ]
        }
      ]
    },
    {
      "type": "sun.java2d.loops.CompositeType",
      "fields": [
        {
          "name": "AnyAlpha"
        },
        {
          "name": "Src"
        },
        {
          "name": "SrcNoEa"
        },
        {
          "name": "SrcOver"
        },
        {
          "name": "SrcOverNoEa"
        },
        {
          "name": "Xor"
        }
      ]
    },
    {
      "type": "sun.java2d.loops.DrawGlyphList",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "long",
            "sun.java2d.loops.SurfaceType",
            "sun.java2d.loops.CompositeType",
            "sun.java2d.loops.SurfaceType"
          ]
        }
      ]
    },
    {
      "type": "sun.java2d.loops.DrawGlyphListAA",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "long",
            "sun.java2d.loops.SurfaceType",
            "sun.java2d.loops.CompositeType",
            "sun.java2d.loops.SurfaceType"
          ]
        }
      ]
    },
    {
      "type": "sun.java2d.loops.DrawGlyphListLCD",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "long",
            "sun.java2d.loops.SurfaceType",
            "sun.java2d.loops.CompositeType",
            "sun.java2d.loops.SurfaceType"
          ]
        }
      ]
    },
    {
      "type": "sun.java2d.loops.DrawLine",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "long",
            "sun.java2d.loops.SurfaceType",
            "sun.java2d.loops.CompositeType",
            "sun.java2d.loops.SurfaceType"
          ]
        }
      ]
    },
    {
      "type": "sun.java2d.loops.DrawParallelogram",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "long",
            "sun.java2d.loops.SurfaceType",
            "sun.java2d.loops.CompositeType",
            "sun.java2d.loops.SurfaceType"
          ]
        }
      ]
    },
    {
      "type": "sun.java2d.loops.DrawPath",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "long",
            "sun.java2d.loops.SurfaceType",
            "sun.java2d.loops.CompositeType",
            "sun.java2d.loops.SurfaceType"
          ]
        }
      ]
    },
    {
      "type": "sun.java2d.loops.DrawPolygons",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "long",
            "sun.java2d.loops.SurfaceType",
            "sun.java2d.loops.CompositeType",
            "sun.java2d.loops.SurfaceType"
          ]
        }
      ]
    },
    {
      "type": "sun.java2d.loops.DrawRect",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "long",
            "sun.java2d.loops.SurfaceType",
            "sun.java2d.loops.CompositeType",
            "sun.java2d.loops.SurfaceType"
          ]
        }
      ]
    },
    {
      "type": "sun.java2d.loops.FillParallelogram",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "long",
            "sun.java2d.loops.SurfaceType",
            "sun.java2d.loops.CompositeType",
            "sun.java2d.loops.SurfaceType"
          ]
        }
      ]
    },
    {
      "type": "sun.java2d.loops.FillPath",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "long",
            "sun.java2d.loops.SurfaceType",
            "sun.java2d.loops.CompositeType",
            "sun.java2d.loops.SurfaceType"
          ]
        }
      ]
    },
    {
      "type": "sun.java2d.loops.FillRect",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "long",
            "sun.java2d.loops.SurfaceType",
            "sun.java2d.loops.CompositeType",
            "sun.java2d.loops.SurfaceType"
          ]
        }
      ]
    },
    {
      "type": "sun.java2d.loops.FillSpans",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "long",
            "sun.java2d.loops.SurfaceType",
            "sun.java2d.loops.CompositeType",
            "sun.java2d.loops.SurfaceType"
          ]
        }
      ]
    },
    {
      "type": "sun.java2d.loops.GraphicsPrimitive",
      "fields": [
        {
          "name": "pNativePrim"
        }
      ]
    },
    {
      "type": "sun.java2d.loops.GraphicsPrimitiveMgr",
      "methods": [
        {
          "name": "register",
          "parameterTypes": [
            "sun.java2d.loops.GraphicsPrimitive[]"
          ]
        }
      ]
    },
    {
      "type": "sun.java2d.loops.MaskBlit",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "long",
            "sun.java2d.loops.SurfaceType",
            "sun.java2d.loops.CompositeType",
            "sun.java2d.loops.SurfaceType"
          ]
        }
      ]
    },
    {
      "type": "sun.java2d.loops.MaskFill",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "long",
            "sun.java2d.loops.SurfaceType",
            "sun.java2d.loops.CompositeType",
            "sun.java2d.loops.SurfaceType"
          ]
        }
      ]
    },
    {
      "type": "sun.java2d.loops.ScaledBlit",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "long",
            "sun.java2d.loops.SurfaceType",
            "sun.java2d.loops.CompositeType",
            "sun.java2d.loops.SurfaceType"
          ]
        }
      ]
    },
    {
      "type": "sun.java2d.loops.SurfaceType",
      "fields": [
        {
          "name": "Any3Byte"
        },
        {
          "name": "Any4Byte"
        },
        {
          "name": "AnyByte"
        },
        {
          "name": "AnyColor"
        },
        {
          "name": "AnyInt"
        },
        {
          "name": "AnyShort"
        },
        {
          "name": "ByteBinary1Bit"
        },
        {
          "name": "ByteBinary2Bit"
        },
        {
          "name": "ByteBinary4Bit"
        },
        {
          "name": "ByteGray"
        },
        {
          "name": "ByteIndexed"
        },
        {
          "name": "ByteIndexedBm"
        },
        {
          "name": "FourByteAbgr"
        },
        {
          "name": "FourByteAbgrPre"
        },
        {
          "name": "Index12Gray"
        },
        {
          "name": "Index8Gray"
        },
        {
          "name": "IntArgb"
        },
        {
          "name": "IntArgbBm"
        },
        {
          "name": "IntArgbPre"
        },
        {
          "name": "IntBgr"
        },
        {
          "name": "IntRgb"
        },
        {
          "name": "IntRgbx"
        },
        {
          "name": "OpaqueColor"
        },
        {
          "name": "ThreeByteBgr"
        },
        {
          "name": "Ushort4444Argb"
        },
        {
          "name": "Ushort555Rgb"
        },
        {
          "name": "Ushort555Rgbx"
        },
        {
          "name": "Ushort565Rgb"
        },
        {
          "name": "UshortGray"
        },
        {
          "name": "UshortIndexed"
        }
      ]
    },
    {
      "type": "sun.java2d.loops.TransformHelper",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "long",
            "sun.java2d.loops.SurfaceType",
            "sun.java2d.loops.CompositeType",
            "sun.java2d.loops.SurfaceType"
          ]
        }
      ]
    },
    {
      "type": "sun.java2d.loops.XORComposite",
      "fields": [
        {
          "name": "alphaMask"
        },
        {
          "name": "xorColor"
        },
        {
          "name": "xorPixel"
        }
      ]
    },
    {
      "type": "sun.java2d.pipe.Region",
      "fields": [
        {
          "name": "bands"
        },
        {
          "name": "endIndex"
        },
        {
          "name": "hix"
        },
        {
          "name": "hiy"
        },
        {
          "name": "lox"
        },
        {
          "name": "loy"
        }
      ]
    },
    {
      "type": "sun.java2d.pipe.RegionIterator",
      "fields": [
        {
          "name": "curIndex"
        },
        {
          "name": "numXbands"
        },
        {
          "name": "region"
        }
      ]
    },
    {
      "type": "sun.java2d.windows.WindowsFlags",
      "fields": [
        {
          "name": "d3dEnabled"
        },
        {
          "name": "d3dSet"
        },
        {
          "name": "offscreenSharingEnabled"
        },
        {
          "name": "setHighDPIAware"
        }
      ]
    },
    {
      "type": "sun.launcher.LauncherHelper",
      "fields": [
        {
          "name": "isStaticMain"
        },
        {
          "name": "noArgMain"
        }
      ],
      "methods": [
        {
          "name": "getApplicationClass",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.management.VMManagementImpl",
      "fields": [
        {
          "name": "compTimeMonitoringSupport"
        },
        {
          "name": "currentThreadCpuTimeSupport"
        },
        {
          "name": "objectMonitorUsageSupport"
        },
        {
          "name": "otherThreadCpuTimeSupport"
        },
        {
          "name": "remoteDiagnosticCommandsSupport"
        },
        {
          "name": "synchronizerUsageSupport"
        },
        {
          "name": "threadAllocatedMemorySupport"
        },
        {
          "name": "threadContentionMonitoringSupport"
        }
      ]
    },
    {
      "type": "wxdgaming.mariadb.winfm.ApplicationMain",
      "methods": [
        {
          "name": "main",
          "parameterTypes": [
            "java.lang.String[]"
          ]
        }
      ]
    }
  ]
}